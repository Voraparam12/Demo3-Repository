git checkout --<filename>
git restore --staged <filename>
git checkout -f
git remote 
git remote -v
git push -u <name of website>
tail <~/.ssh/id_ed25519.pub>
git config --global alias.st status
git config --global alias.unstage 'restore --staged --'
git unstage this.txt
git config --global alias.last 'log -p -1'
git restore <File Name>
git checkout -b develop
git checkout master
rm -rf .git
git branch
git merge <branch name> -- to merge all the branches only when you are in the master branch
git remote add <Name> <Link of github repo>
git branch -v -- shows last commit with its hash
git branch --merged
git branch --no-merged
git branch -d <branch name> ---> gives error if branch is not merged
	   -D ----> no error and branch is deleted
git push origin bugfix: <rename branch on remote>
git push -d origin <Branch Name> ---> to delete branch from remote